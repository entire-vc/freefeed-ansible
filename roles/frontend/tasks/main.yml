---

- name: Ensure /etc/freefeed
  become: yes
  file:
    path: "/etc/freefeed/{{ freefeed_env }}"
    state: directory

- name: Render /etc/freefeed/{{ freefeed_env }}/config.json
  become: yes
  template:
    src: config.json.j2
    dest: "/etc/freefeed/{{ freefeed_env }}/config.json"

- name: Check which env is active
  become: yes
  docker_container_info:
    name: "nginx-{{ freefeed_env }}-blue"
  register: result

- set_fact:
    old_env: green
    new_env: blue
    old_port: "{{ client_green_port }}"
    new_port: "{{ client_blue_port }}"
  when: not result.container

- set_fact:
    old_env: blue
    new_env: green
    old_port: "{{ client_blue_port }}"
    new_port: "{{ client_green_port }}"
  when: result.container

- set_fact:
    server_containers: []

- set_fact:
    server_containers: "{{ server_containers + ['freefeed-server-'+freefeed_env+'-'+item] }}"
  with_sequence: count="{{ freefeed_server_instances }}"

- name: Render nginx config
  become: yes
  template: src="{{ item }}.j2" dest="/etc/freefeed/{{ freefeed_env }}/{{ item }}"
  loop:
    - nginx.conf
    - freefeed-common.conf
  register: nginx_conf

- name: Pull images
  become: yes
  docker_image:
    name: "{{ item }}"
    source: pull
    state: present
    force_source: yes
  loop:
    - "{{ react_client_image }}"
    - "nginx:latest"
  register: pull_images

- name: Create freefeed-react-client container
  become: yes
  docker_container:
    name: "freefeed-react-client-{{ freefeed_env }}-{{ new_env }}"
    image: "{{ react_client_image }}"
    command: echo
    state: present
    pull: yes

- name: Start nginx container
  become: yes
  docker_container:
    name: "nginx-{{ freefeed_env }}-{{ new_env }}"
    image: nginx:latest
    volumes_from:
      - "freefeed-react-client-{{ freefeed_env }}-{{ new_env }}"
    published_ports:
      - "{{ new_port }}:80"
    volumes:
      - "/etc/freefeed/{{ freefeed_env }}/nginx.conf:/etc/nginx/nginx.conf:ro"
      - "/etc/freefeed/{{ freefeed_env }}/freefeed-common.conf:/etc/nginx/freefeed-common.conf:ro"
      - "/etc/freefeed/{{ freefeed_env }}/config.json:/var/www/freefeed-react-client/config.json:ro"
    networks:
      - name: freefeed
    state: started
    restart_policy: on-failure

- name: Switch port in nginx.conf
  become: yes
  lineinfile:
    path: /etc/nginx/nginx.conf
    regexp: "server localhost:{{ old_port }};$"
    line: "      server localhost:{{ new_port }};"

- name: Reload nginx
  systemd:
    name: nginx
    state: reloaded

- pause:
    seconds: 5

- name: Delete old containers
  become: yes
  docker_container:
    name: "{{ item }}"
    state: absent
    force_kill: yes
  loop:
    - "nginx-{{ freefeed_env }}-{{ old_env }}"
    - "freefeed-react-client-{{ freefeed_env }}-{{ old_env }}"

